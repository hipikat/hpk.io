#
# Python build system configuration
# https://peps.python.org/pep-0518/
#

[project]
name = "hpk"
version = "0.0.1"
description = "These are my web pages."
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
authors = [{ name = "Ada Wright", email = "ada@hpk.io" }]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "gunicorn>=23.0.0",
  "picata>=0.0.13",
]

[project.urls]
Documentation = "https://github.com/hipikat/hpk.io#readme"
Issues        = "https://github.com/hipikat/hpk.io/issues"
Source        = "https://github.com/hipikat/hpk.io"

[dependency-groups]
dev = [
  "django-debug-toolbar>=5.0.1",
  "django-extensions>=3.2.3",
  "django-stubs[compatible-mypy]>=5.1.2",
  "ipython>=8.31.0",
  "mypy>=1.14.1",
  "pre-commit>=4.0.1",
  "py-spy>=0.4.0",
  "ruff>=0.9.3",
  "watchdog>=6.0.0",
  "werkzeug>=3.1.3",
]
test = [
  "pytest-cov>=6.0.0",
  "pytest-django>=4.9.0",
  "pytest-playwright>=0.7.0",
  "pytest-xdist>=3.6.1",
]

[tool.mypy]
exclude = [
  '^(.git|.pytest_cache|.ruff_cache|.venv)/.*',
  '^(build|dist|infra|lib|logs|media|node_modules|snapshots|static)/.*',
]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
plugins = ["mypy_django_plugin.main"]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "hpk.settings.mypy"

# [[tool.mypy.overrides]]
# module = ["debug_toolbar.*"]
# ignore_missing_imports = true

[tool.ruff]
include     = ["*.py"]
line-length = 100
cache-dir   = "~/.cache/ruff"
exclude     = [".venv", "lib/"]
extend-exclude = ["**/migrations/*"]
fix          = true
show-fixes   = true
indent-width = 4

[tool.ruff.lint]
select = [
  "ALL", # Enable all linting rules.
]
extend-select = [
  "E501", # Enforce line length limits
]
ignore = [
  "D203",   # One blank line required before class docstring
  "COM812", # Avoid unreferenced module-level imports (may ignore imports in __init__.py)
  "ISC001", # Avoid implicit string concatenation (allowed for convenience in tests, etc.)
  "ARG002", # Allow unused method arguments (Hello, **kwargs!)
  "EM101",  # Allow string literals in Exception("Messages")
  "EM102",  # Allow f-string literals in Exception(f"{messages}")
  "TRY003", # Allow stings of more than a few characters in Exception("Messages")
  "G004",   # Allow logging statements to use f-strings, FFS
]
fixable = [
  "ALL", # All fixable rules will be automatically corrected.
]

[tool.ruff.format]
docstring-code-format = true # Reformat code blocks in docstrings.

[tool.ruff.lint.pydocstyle]
convention = "google" # Use Google's docstring conventions.

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "INP001", # Suppress warnings for implicit namespace packages in test directories.
  "S101",   # Allow usage of `assert` in tests.
]
"**/migrations/*" = [
  "RUF012", # Ignore `__future__` imports in migration files.
  "D100",   # Allow missing docstrings in module-level migration files.
  "D101",   # Allow missing docstrings in migration class definitions.
  "D104",   # Allow missing docstrings in empty migration modules.
  "Q000",   # Ignore smart quotes in migration files.
  "E501",   # Allow long lines in migration files.
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "hpk.settings.test"
pythonpath = "src"
python_files = 'tests.py test_*.py *_tests.py'
norecursedirs = '.git .venv build dist lib logs media node_modules snapshots static'
filterwarnings = [  # ACTION:MATCH_EXPRESSION:CATEGORY:MODULE:LINE
  "ignore::django.utils.deprecation.RemovedInDjango60Warning",
  "ignore:.*getdefaultlocale.*:DeprecationWarning",
]
